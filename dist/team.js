(()=>{"use strict";const t={get:(t="")=>fetch(t),post(t="",e={}){const s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)};return fetch(t,s)},put(t="",e={}){const s={method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)};return fetch(t,s)},delete:(t="")=>fetch(t,{method:"DELETE",headers:{"Content-Type":"application/json"}})},e="https://js-todo-list-9ca3a.df.r.appspot.com/api/teams",s=async s=>{try{const n=await t.post(e,s);if(n.ok)return n.json();throw new Error(`${n.status}, ${n.statusText}`)}catch(t){console.error(`Create Team Error: ${t}`)}},n=async()=>{try{const s=await t.get(e);if(s.ok)return s.json();throw new Error(`${s.status}, ${s.statusText}`)}catch(t){console.error(`GET Team List Error: ${t}`)}},r=new class extends class{constructor(){this.observers=[]}subscribe(t){this.observers=this.observers.concat(t)}publish(){this.observers.forEach((t=>t()))}}{constructor(){super(),this._teams={}}get(){return this._teams}set(t){this._teams=t,this.publish()}};class a{constructor(){this.$target=(".team-list-container",document.querySelector(".team-list-container")),r.subscribe(this.render.bind(this)),this.init()}addEvent(){this.$target.addEventListener("click",this.createTeam.bind(this))}async createTeam({target:t}){if("add-team-button"!==t.id)return;const e=prompt("팀 이름을 입력해주세요");if(null===e)return;const n=await s({name:e}),a=r.get();r.set(a.concat(n))}async init(){const t=await n();r.set(t),this.addEvent()}async render(){let t=r.get().reduce(((t,e)=>t+`<div class="team-card-container">\n          <a href="kanban.html?id=${e._id}" class="card">\n            <div class="card-title">${e.name}</div>\n          </a>\n        </div>`),"");t+='\n      <button id="add-team-button" class="ripple">\n        <span class="material-icons">add</span>\n      </button>\n    ',this.$target.innerHTML=t}}window.addEventListener("load",(function(){new a}))})();